<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="guna2BorderlessForm1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="guna2ImageButton1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAA
        6gAAAOoB+Ss1JgAAABl0RVh0U29mdHdhcmUAd3d3Lmlua3NjYXBlLm9yZ5vuPBoAAAMXSURBVFhHxZfJ
        y05hGIffZMwsQxJliDLHRmRjY1oYiliQPVl+RbFQppKFkjmRKeIPMIS+jBulhGxMG2yMGTJd1+McfZ3v
        zN8rv7rq3M/7nPNM930/99uooN6wEg7BXXgN3yJ8vgMHYQXYt2kaCvvgE/yCd3AdTsDuiJNR23uwj32d
        6BiorR6wBT7CVzgM86AbZMnf5oN9fcfd2QF576TKmd+Hn+DqRkJVjYJT4DduwBAopanwCj7AIhs6qMXg
        t57DRBvy5Mod3M6TbGiSJoPffAaZO9Ed7oGz9YVmazzowDch1Sd0uB+Qt+3DYT2chVa4BsdhDQyAIi0B
        fWJ7sNrIUNPbdbg09YW9oFcbZo/hChh6L6I2V7cROkOeToMRMjpYkYxzG9O8XW9+CP6+J7KTmgbnwIlc
        hLxE5Pt+y6QVZGcTh7GbVH9wtWa6WTYUaBW4k3OCla0jYL9eGqZXZ24CSeoofIYZwSqnoiNQC8Axl2uY
        Mj2/pGeOg+/QzmFKqBPMhS7Bai8jzrR9QMOLRW9OajM4gUHBqiZ9SW+/AFmTuAy3fXgDpsyk9PJbfx5r
        aS3kTULHN+kFj9zlQ0J6viGTpRa4VMBb8Kz1paS2wRcf/vsE8o4gnFFNlT4CK5k0J9wEOuHgYFVTWScM
        PmZGMiSSYTgWnMDOYFVTmTD00tuvYQ2XlYjMWJ7TzGCVU9agbbUQHHOZRl4q7gePQD+ZbUOBVkPZVOwO
        9AwWMhsaDWkXjef5ALwJvRHTCs3pcB5cVdFl5C3oWCELxvKjDpAWDaoPeBP6ooM8gfg6fhm1GXIboOgu
        OAMea7ub1+pVz7WGy9IwWAfmh1a4CsfArffmLNJScIytwUpI53FF/6okmwL6hxVyZpluwWjxKM2chINb
        OT2Fwrxi6ewE3AlruI7KbXflVsQTbCijgWB29LwsQOv8xRoBerqFbqU/JrE8J4sRPV+MXSsZs1iW/M0+
        9o3f0+G6Qm2ZG0zXbqPh5tF403mZGDliSjW3+1vcx9WnFbm1ZQFpDedg3pLeZPEqfbbNSZle/2a4fDUa
        vwGtGeUF4ejgRwAAAABJRU5ErkJggg==
</value>
  </data>
  <data name="label1.Text" xml:space="preserve">
    <value>TAK-C is a project for renting cars or calling one to take the costumer from one place to another
accourding to the info given by the users a suitable car comes to their pick-up,the application
tells the user both the distance needed for the car to arrive and the time it would take allowing
for easy pick-ups
</value>
  </data>
</root>